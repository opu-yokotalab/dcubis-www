[[進捗/2007]]
*清川皓太の進捗状況 [#he66e2d3]
**目的 [#h017b048]
-SOMのクラスタリング結果であるUマトリクス(マップ)を改良し、一覧性のある、見易い可視化を行いたい

-ラベルをクラスタに加えたり、外したりといった、クラスタリング後のクラスタの操作を行えるようにしたい


**理由 [#u02f81b2]
- 現在のUマトリクスは、ラベル情報が文字だけで分かりづらい

- ラベルが同じ座標に重なってしまうと、その内の一つのみしか見えなくなる。


**解決方法 [#p4959dc9]
- SOMのUマトリクスをベースにして、サムネイルを使って見易さを追求した可視化を行う

- クラスタごとに、順番に並べた一覧を見る事もできる。

- クラスタの範囲を操作し、そのクラスタでないラベルをそのクラスタに加える事ができる

- クリックで選択したラベルは拡大表示され、同時にメタデータを表示する。

- 重なったラベルは、クリックで一覧を見る事もできる


**アプローチ [#pe772dc1]

-可視化のイメージをまとめている。とりあえず、紙に書いてみた。ウィンドウを分けるよりも、タブで表示した方がいいところと、表示しない方がいいところ。


-ラベルが重なった場合は、中で配列に上書きしているので、改造の必要有り。SOM_PAKもいじらないと。

-いまのところjavaで実装かなー。FLASHだと他と連携できない。silverlightだと連携できるらしいが。。。うーん。
　

#pcomment


*目次 [#pe772dc1]
**1序論 [#y83505f2]
***1.1本論文の背景と目的 [#n53fd290]
近年の技術の進歩により、我々は静止画や動画といったマルチメディアコンテンツ（以降コンテンツと略記する）を手軽で大量に作成できるようになった。
また、それらのコンテンツを加工する手段も増えており、インターネットを利用して自分が手を加えたコンテンツを公開することも盛んに行われている。
そうした中で、大量のコンテンツを統合して閲覧者に提供する事を目的とした研究が数多く行われている。
例えば、デジタルミュージアムや博物館の所蔵品検索がある。\\
しかし、大量のコンテンツを提供した場合、その中から閲覧者が閲覧したいコンテンツを探すことは、とても困難な作業である。
そこで、閲覧者が閲覧したいコンテンツを迅速に見つけ出す手助けとなるコンテンツの提示方法について、様々な研究が行われてきた。
fisheye viewや＊＊である。
また、コンテンツに付加されたメタデータを用いて複数のコンテンツをまとめる方法として、自己組織化マップ(Self Organizing Maps:以降SOMと略記する)がある。
そして、それを利用した＊＊として一般的なSOM_PAKがある。
しかし、その提示方法は分類という目的だけのものであり、文字情報やモノクロの四角を並べたものであり、閲覧者に提示するのに適した提示方法ではなかった。\\

このような背景から、SOMを用いてクラスタリングしたコンテンツを提示する手法の研究を行った。
本論文で提案する手法のクラスタリング対象として主にデジタルミュージアムと博物館の所蔵品検索を取り上げる。

***1.2本論文の構成 [#be582fa9]
本論文の構成は次の通りである。まず、第２章では今回の研究の対象となる自己組織化マップやデジタルミュージアムについての説明を行う。
第３章では本論文で提案するSOMを利用したクラスタリング結果の可視化とその編集方法についての説明を行う。
第４章では可視化したデータの応用についての説明を行う。
第５章で実装したシステムの紹介と評価を行い、第６章で本研究の結論と今後の課題について述べる。
**2概要 [#e09d6998]
***自己組織化マップ(Self-Organizing Maps) [#bd46b838]
****SOMの概要 [#abdd12b7]
自己組織化マップ(Self-Organizing Maps)とは,Teuvo Kohonen氏が,,,
****SOMに関する研究 [#nbfb0b0d]
OMに関しては1997年頃から数多く研究されいて,特に可視化に関係のあるものを挙げると文献--のようなものがある.
****SOM_PAK [#z2fd3e47]
一番最初のパブリックドメインの一般的な目的のSOM開発ツールであるソフトウェアパッケージは「SOM_PAK」で、ヘルシンキ工科大学の情報工学科とLaboratory of Computer社によって,1990年に公開配給された.そのソースコードは完全に利用可能である.
****SOMの問題点 [#ta71b493]
SOMの出力は,図?にあるような「Uマトリクス」に出力される。しかし、これを用いる際の問題点として,以下のような事柄が挙げられる.
-SOMを用いてクラスタリングしたいときに、SOM_PAKではいろいろな準備が必要
-Uマトリクス上のラベルの情報が文字だけであるため,分かりづらい
-重なったラベルは、その内の１つしか表示されない
-Uマトリクスがラベルの数に対して大きすぎた場合に、見づらいものになる
***利用者指向デジタルミュージアムD-Cubis [#z1610b0b]
****D-Cubisの概要 [#tda62867]
利用者指向デジタルミュージアムD-Cubisとは,
****コンテンツの配置における制約 [#a689c6f1]
D-Cubisにてコンテンツを配置する際には、配置する場所に制限がある.「部屋」や「配置場所」だ.


**3.SOMを利用したクラスタリング結果の可視化とその編集 [#u0c50906]
***3.1システムの全体像 [#gc501aa2]
システムの全体像を、図＊＊に示す。
まず、入力コンテンツとして複数のテキスト、画像、動画のメタ情報を読込み、SOM_PAKで利用できる形に変換し、SOM_PAKによってクラスタリングを行う。
その結果に対して可視化を行うが、ユーザが意図したものではなかった場合にはユーザの設定によって再度可視化を行い、またユーザの意図によって順番付けを行う。
そして順番付けされたコンテンツ群をXMLファイルとして出力する。
これを利用して少し手を加えれば、デジタルミュージアムや所蔵品検索、またHTMLファイルとして利用できる。
***3.2-入力ファイルからのメタデータ読み込み [#p9717231]
入力コンテンツは
クラスタリング対象は複数のコンテンツ情報を記載したxmlファイルとする。
これは、所蔵品検索システムでも用いられているものである。
xmlでは、複数の種類のタグによって、それぞれのコンテンツのメタ情報を付加することが出来る。
このメタ情報が多ければ多いほど、細かいクラスタリングが可能であると考えることが出来る。
しかし、SOM_PAKでの入力は、何次元かの0以上1以下の値をもつベクトルである。
よって、複数のコンテンツのメタ情報の入力されたxmlファイルを、SOM_PAKでのクラスタリングに適する形に変換する必要がある。
\subsubsection{入力ファイルの作成}
所蔵品検索システムから、入力コンテンツのメタ情報が記されたxmlファイルの例を以下に示す.
\begin{verbatim}
<item>
    <dc:Identifier>陶158-1956</dc:Identifier>
    <dcterms:alternative>緑釉方形容器</dcterms:alternative>
    <dcterms:alternative>Green Glazed Square Vessel with Lid</dcterms:alternative>
    <dcterms:artClass>陶器・施釉製品</dcterms:artClass>
    <dcterms:medium>陶器</dcterms:medium>
    <dcterms:medium>Pottery</dcterms:medium>
    <dcterms:country>イラン西北部</dcterms:country>
    <dcterms:country>North-western Iran, ,</dcterms:country>
    <dcterms:provenance>イラン西北部</dcterms:provenance>
    <dcterms:century>前8〜前7世紀</dcterms:century>
    <dcterms:century>8th-7th Century B.C.</dcterms:century>
    <dcterms:artAge>アッシリア並行時代</dcterms:artAge>
    <dcterms:isFormatOf>contents/01581956.jpg</dcterms:isFormatOf>
  </item>
  <item>
    <dc:Identifier>陶074-144</dc:Identifier>
    <dcterms:alternative>緑釉把手付壺</dcterms:alternative>
    <dcterms:alternative>Green Glazed Bottle with Handle</dcterms:alternative>
    <dcterms:artClass>陶器・施釉製品</dcterms:artClass>
    <dcterms:medium>陶器</dcterms:medium>
    <dcterms:medium>Pottery</dcterms:medium>
    <dcterms:country>イランまたはイラク</dcterms:country>
    <dcterms:country>Iran or Iraq,</dcterms:country>
    <dcterms:provenance>イランまたはイラク</dcterms:provenance>
    <dcterms:century>8〜9世紀</dcterms:century>
    <dcterms:century>8th-9th Century A.D.</dcterms:century>
    <dcterms:artAge>イスラーム時代初期</dcterms:artAge>
    <dcterms:extent>高22.5cm</dcterms:extent>
    <dcterms:extent>径13.2cm</dcterms:extent>
    <dcterms:extent>H.22.cm</dcterms:extent>
    <dcterms:isFormatOf>contents/00740144.jpg</dcterms:isFormatOf>
  </item>


\end{verbatim}
このとき、タグ<item>は、あるコンテンツに対応していて、その要素はコンテンツのメタデータを表している。
タグ<dc:Identifier>の要素は、コンテンツのIDを表していて、このIDによってコンテンツの区別ができる。
タグ<dcterms:isFormatOf>の要素は、コンテンツのサムネイル写真の相対アドレスを表しているので、このサムネイルは可視化の際の材料にすることができる。
また、その他のタグ<dcterms:century>や、<dcterms:alternative>は、それぞれそのコンテンツが製作された年代や、その種類を表している。
そのため、これらの情報はクラスタリングの際の特徴ベクトルになり得ると判断できる。

特徴ベクトルになりうる要素は、その要素があれば1,なければ0というように、特徴ベクトルに変換する。
この例でいうと、<dcterms:alternative>タグの要素、緑釉方形容器は、特徴ベクトルにおいてある次元となる。
そして、<dc:Identifier>タグの要素でいうところの陶158-1956ではその数値は1、陶074-144でも1となる。
<dcterms:artAge>タグの要素、アッシリア並行時代もある次元となり、コンテンツ陶158-1956では1となるが、陶074-144では、タグにその要素は存在しないため、0となる。
このようにタグの要素を次元に割り当てていき、要素数と等しい次元数を持つ特徴ベクトルを作成し、SOMの入力とする。


***3.3-SOM\_ PAKの変更 [#e242d366]
****3.3.1-データの流れの変更 [#y820aeb6]
SOM_PAKの出力結果であるUマトリクスではでは前述のように、同じ座標に重なったラベルをその内の1つしか表示する事が出来ない。
これを解決するためにSOM_PAK内部を変更し、重なったラベルを全て表示させる事が必要だった。
SOM_PAKに入力するデータファイルを作成する際に、ラベルに順番にID番号をふっておく。
そして、特徴ベクトルが同じラベルのIDを格納し、そのラベルが重なったことを保持しておくようにした。
こうすることで、SOM_PAKからの出力を受け取った際に、同じ座標に重なったラベルを表示できるようにした。

****3.3.2-Uマトリクスの変更 [#l97393a4]
Uマトリクスでは、前述のように、クラスタの境界というものが明確に表されていない。
ある座標にある特徴ベクトルとその上下左右の座標にある特徴ベクトルとの差異を、ユニットの濃度によって表しているが、これはクラスタを視認する際の、明確な判断基準にはなっていないと考えられるからだ。

***3.4-クラスタ分類法} [#qa7c4759]
***3.5-クラスタリング結果の提示} [#e475c9ed]
****3.5.1-クラスタの明確化 [#j19940b3]
****3.5.2-クラスタ毎の提示 [#i7b4bc44]
****3.5.3-メタデータの表示 [#r9fe9d62]
****3.5.4-魚眼レンズ [#q0b26292]
***3.6-可視化結果の編集 [#q669d045]


*現在[#pe772dc1]
-実装はJAVA!
-入力ファイルの作成パートが完成。
-重なったラベルに対する処理が完成。
-もととなるGUIの全体像が見えてきた！しかしSOMを埋め込むところで行き詰まり。。。


-しきい値による色分け／なめらかな線でのクラスタ分類

-論文を書いてみよう...
